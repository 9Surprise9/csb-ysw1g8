{"version":3,"sources":["components/PlayerList.js","components/PlayList.js","container/Player.js"],"names":["PlayerList","data","handleTrack","stopTrack","pauseTrack","changeVolume","next","setNext","cur","useRef","onPause","e","tracklist","forEach","item","elem","current","id","pause","slice","onPlay","plays","end","onClickNext","useEffect","map","index","childNodes","child","classList","contains","ch","tagName","play","length","id1","id2","setTimeout","document","getElementsByTagName","onClickPrevious","onVolumeChange","volume","target","list","ref","src","image","background","title","subtitle","ui","showSkipControls","showFilledVolume","onEnded","style","flexBasis","memo","Playlist","cleck","currentTarget","onClickCapture","alt","animation","download","href","connect","state","dispatch","addTrack","coverart","coverarthq","url","deleteTrack","props","useState","PlayList"],"mappings":"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","file":"static/js/4.facdb8a5.chunk.js","sourcesContent":["import { memo, useEffect, useRef } from \"react\";\r\nimport AudioPlayer from \"react-h5-audio-player\";\r\nimport {\r\n  TrackImgWrap,\r\n  TrackImg,\r\n  Playerlist,\r\n  PlayerlistWrap,\r\n  DFC\r\n} from \"../styled-components\";\r\nimport \"react-h5-audio-player/lib/styles.css\";\r\nfunction PlayerList({\r\n  data,\r\n  handleTrack,\r\n  stopTrack,\r\n  pauseTrack,\r\n  changeVolume,\r\n  next,\r\n  setNext\r\n}) {\r\n  const cur = useRef();\r\n  const onPause = (e) => {\r\n    data.tracklist.forEach((item) => {\r\n      let elem = cur.current.id;\r\n      if (item.pause === false && +item.id === +elem.slice(0, -4)) {\r\n        pauseTrack(item.id);\r\n      }\r\n    });\r\n  };\r\n  const onPlay = (e) => {\r\n    if (data) {\r\n      data.tracklist.forEach((item) => {\r\n        if (e) {\r\n          let elem = cur.current.id;\r\n          if (\r\n            +item.id === +elem.slice(0, -4) &&\r\n            item.pause === true &&\r\n            item.plays === true\r\n          ) {\r\n            pauseTrack(item.id);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const end = (e) => {\r\n    let id = cur.current.id.slice(0, -4);\r\n    stopTrack(id);\r\n    onClickNext();\r\n  };\r\n  const pl = (e) => {\r\n    if (data) {\r\n      data.tracklist.map((item, index) => {\r\n        if (item.plays === true && item.pause === false) {\r\n          let elem = cur.current;\r\n          if (elem) {\r\n            elem.childNodes.forEach((child) => {\r\n              if (child.classList.contains(\"rhap_container\")) {\r\n                child.childNodes.forEach((ch) => {\r\n                  if (ch.tagName === \"AUDIO\") {\r\n                    ch.play();\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        } else if (item.pause === true && item.plays === true) {\r\n          let elem = cur.current;\r\n          if (elem) {\r\n            elem.childNodes.forEach((child) => {\r\n              if (child.classList.contains(\"rhap_container\")) {\r\n                child.childNodes.forEach((ch) => {\r\n                  if (ch.tagName === \"AUDIO\") {\r\n                    ch.pause();\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    pl();\r\n  });\r\n  const onClickNext = (e) => {\r\n    if (next < data.tracklist.length - 1) {\r\n      setNext(next + 1);\r\n      let id1 = data.tracklist[next].id;\r\n      let id2 = data.tracklist[next + 1].id;\r\n      handleTrack(id2);\r\n      stopTrack(id1);\r\n      setTimeout(() => {\r\n        let el = document.getElementsByTagName(\"audio\");\r\n        el[0].play();\r\n      }, 30);\r\n    } else {\r\n      setNext(0);\r\n      let id1 = data.tracklist[next].id;\r\n      let id2 = data.tracklist[0].id;\r\n      handleTrack(id2);\r\n      stopTrack(id1);\r\n      setTimeout(() => {\r\n        let el = document.getElementsByTagName(\"audio\");\r\n        el[0].play();\r\n      }, 30);\r\n    }\r\n  };\r\n  const onClickPrevious = (e) => {\r\n    if (next > 0) {\r\n      setNext(next - 1);\r\n      let id1 = data.tracklist[next].id;\r\n      let id2 = data.tracklist[next - 1].id;\r\n      handleTrack(id2);\r\n      stopTrack(id1);\r\n      setTimeout(() => {\r\n        let el = document.getElementsByTagName(\"audio\");\r\n        el[0].play();\r\n      }, 30);\r\n    } else {\r\n      setNext(data.tracklist.length - 1);\r\n      let id1 = data.tracklist[next].id;\r\n      let id2 = data.tracklist[data.tracklist.length - 1].id;\r\n      handleTrack(id2);\r\n      stopTrack(id1);\r\n      setTimeout(() => {\r\n        let el = document.getElementsByTagName(\"audio\");\r\n        el[0].play();\r\n      }, 30);\r\n    }\r\n  };\r\n  const onVolumeChange = (e) => {\r\n    let volume = e.target.volume;\r\n    changeVolume(volume);\r\n  };\r\n  let list = data.tracklist.map((item, index) =>\r\n    item.plays === true ? (\r\n      <PlayerlistWrap id={item.id + \"-top\"} key={index} ref={cur}>\r\n        <TrackImgWrap>\r\n          <TrackImg src={item.image.background} />\r\n        </TrackImgWrap>\r\n        <DFC>\r\n          <div>{item.title}</div>\r\n          <div>{item.subtitle}</div>\r\n        </DFC>\r\n        <AudioPlayer\r\n          src={item.src}\r\n          index={index}\r\n          volume={data.ui[0].volume}\r\n          showSkipControls={true}\r\n          showFilledVolume={true}\r\n          onPlay={onPlay}\r\n          onPause={onPause}\r\n          onEnded={end}\r\n          onClickNext={onClickNext}\r\n          onClickPrevious={onClickPrevious}\r\n          onVolumeChange={onVolumeChange}\r\n          style={{ flexBasis: \"50%\" }}\r\n        />\r\n      </PlayerlistWrap>\r\n    ) : (\r\n      \"\"\r\n    )\r\n  );\r\n  return <Playerlist>{list}</Playerlist>;\r\n}\r\nexport default memo(PlayerList);\r\n","import { memo, useRef } from \"react\";\r\nimport {\r\n  Container,\r\n  DFC,\r\n  PlayList,\r\n  TrackSubTitle,\r\n  TrackTitle,\r\n  TrackWrap,\r\n  TrackImgWrap,\r\n  TrackImg,\r\n  Plug,\r\n  PlugDot\r\n} from \"../styled-components\";\r\n\r\nfunction Playlist({ data, handleTrack, stopTrack, pauseTrack, next, setNext }) {\r\n  const onPlay = (e) => {\r\n    data.tracklist.forEach((item) => {\r\n      if (+item.id === +e.currentTarget.id && item.plays === false) {\r\n        handleTrack(e.currentTarget.id);\r\n      } else if (+item.id !== +e.currentTarget.id && item.plays === true) {\r\n        stopTrack(item.id);\r\n      }\r\n    });\r\n  };\r\n  const cleck = (e) => {\r\n    if (e.target.tagName === \"A\") {\r\n      return;\r\n    }\r\n    data.tracklist.forEach((item, index) => {\r\n      if (\r\n        +item.id === +e.currentTarget.id &&\r\n        item.plays === false &&\r\n        item.pause === true\r\n      ) {\r\n        onPlay(e);\r\n        pauseTrack(e.currentTarget.id);\r\n        setNext(index);\r\n      } else if (+item.id === +e.currentTarget.id && item.pause === false) {\r\n        pauseTrack(e.currentTarget.id);\r\n      } else if (\r\n        +item.id === +e.currentTarget.id &&\r\n        item.pause === true &&\r\n        item.plays === true\r\n      ) {\r\n        pauseTrack(item.id);\r\n      }\r\n    });\r\n  };\r\n  let style = {\r\n    animation: \"\"\r\n  };\r\n  let list = data.tracklist.map((item, index) => (\r\n    <TrackWrap key={index} id={item.id} onClickCapture={cleck}>\r\n      <TrackImgWrap>\r\n        <TrackImg src={item.image.background} alt={item.title} />\r\n        {item.plays === true ? (\r\n          <Plug>\r\n            <PlugDot\r\n              style={\r\n                item.plays === true && item.pause === false\r\n                  ? { animation: \"plug .8s infinite ease-in-out alternate\" }\r\n                  : { animation: \"none\" }\r\n              }\r\n            ></PlugDot>\r\n          </Plug>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </TrackImgWrap>\r\n      <DFC>\r\n        <TrackTitle>{item.title}</TrackTitle>\r\n        <TrackSubTitle>{item.subtitle}</TrackSubTitle>\r\n      </DFC>\r\n      <a id=\"download\" download href={item.src}>\r\n        Загрузить\r\n      </a>\r\n    </TrackWrap>\r\n  ));\r\n  return (\r\n    <Container>\r\n      <PlayList>{list}</PlayList>\r\n    </Container>\r\n  );\r\n}\r\nexport default memo(Playlist);\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addTrack,\r\n  deleteTrack,\r\n  handleTrack,\r\n  stopTrack,\r\n  pauseTrack,\r\n  changeVolume\r\n} from \"../actions\";\r\nimport PlayerList from \"../components/PlayerList\";\r\nimport PlayList from \"../components/PlayList\";\r\nimport Preloader from \"../components/Preloader\";\r\nimport { Container } from \"../styled-components\";\r\nfunction Player(props) {\r\n  const [next, setNext] = useState(0);\r\n  const data = () => {\r\n    return props.state;\r\n  };\r\n  const addTrack = (e) => {\r\n    //console.log(e);\r\n  };\r\n  const deleteTrack = (e) => {\r\n    //console.log(e);\r\n  };\r\n  const handleTrack = (id) => {\r\n    props.handleTrack(id);\r\n  };\r\n  const stopTrack = (id) => {\r\n    props.stopTrack(id);\r\n  };\r\n  const pauseTrack = (id) => {\r\n    props.pauseTrack(id);\r\n  };\r\n  const changeVolume = (volume) => {\r\n    props.changeVolume(volume);\r\n  };\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <h1>PlayList</h1>\r\n      </Container>\r\n      <PlayerList\r\n        data={data()}\r\n        handleTrack={handleTrack}\r\n        stopTrack={stopTrack}\r\n        pauseTrack={pauseTrack}\r\n        changeVolume={changeVolume}\r\n        next={next}\r\n        setNext={setNext}\r\n      />\r\n      <PlayList\r\n        data={data()}\r\n        handleTrack={handleTrack}\r\n        stopTrack={stopTrack}\r\n        pauseTrack={pauseTrack}\r\n        next={next}\r\n        setNext={setNext}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return { state };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addTrack: (\r\n      id,\r\n      src,\r\n      background,\r\n      coverart,\r\n      coverarthq,\r\n      title,\r\n      subtitle,\r\n      url\r\n    ) => {\r\n      dispatch(\r\n        addTrack(\r\n          id,\r\n          src,\r\n          background,\r\n          coverart,\r\n          coverarthq,\r\n          title,\r\n          subtitle,\r\n          url\r\n        )\r\n      );\r\n    },\r\n    deleteTrack: (id) => {\r\n      dispatch(deleteTrack(id));\r\n    },\r\n    handleTrack: (id) => {\r\n      dispatch(handleTrack(id));\r\n    },\r\n    stopTrack: (id) => {\r\n      dispatch(stopTrack(id));\r\n    },\r\n    pauseTrack: (id) => {\r\n      dispatch(pauseTrack(id));\r\n    },\r\n    changeVolume: (volume) => {\r\n      dispatch(changeVolume(volume));\r\n    }\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n"],"sourceRoot":""}